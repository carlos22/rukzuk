<?php
namespace Orm\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends EntityRepository
{
  /**
   * Sucht nach einem Ausdruck im Content sowie Template Content einer Page
   *
   * @param string $websiteId
   * @param string $needle
   *
   * @return  array
   */
  public function searchInContentAndTemplateContent($websiteId, $needle)
  {
    $dql = 'SELECT DISTINCT m.id FROM Orm\\Entity\\Page m'
      . ' WHERE (m.content LIKE :needle OR m.templatecontent LIKE :needle)'
      . ' AND m.websiteid LIKE :websiteid';

    $query = $this->_em->createQuery($dql);
    $query->setParameter('websiteid', $websiteId);
    $query->setParameter('needle', '%'.$needle.'%');
    return $query->getResult();
  }

  /**
   * @param  string $mediaId
   * @param  string $websiteId
   * @return array
   */
  public function findByMediaAndWebsiteId($mediaId, $websiteId)
  {
    $dql = 'SELECT DISTINCT p FROM Orm\\Entity\\Page p'
      . ' WHERE (p.content LIKE :needle OR p.mediaid = :mediaid)'
      . ' AND p.websiteid LIKE :websiteid';

    $query = $this->_em->createQuery($dql);
    $query->setParameter('needle', '%'.$mediaId.'%');
    $query->setParameter('mediaid', $mediaId);
    $query->setParameter('websiteid', $websiteId);
    return $query->getResult();
  }
  /**
   * @param  string $websiteId
   * @return array
   */
  public function findByWebsiteId($websiteId)
  {
    $dql = 'SELECT DISTINCT p FROM Orm\\Entity\\Page p'
      . ' WHERE p.websiteid = :websiteId';

    $query = $this->_em->createQuery($dql);
    $query->setParameter('websiteId', $websiteId);
    return $query->getResult();
  }

  /**
   * @param string $websiteId
   * @param string $tempalteId
   * @return array
   */
  public function getIdsByWebsiteIdAndTemplateId($websiteId, $tempalteId)
  {
    $dql = 'SELECT DISTINCT p.id as id FROM Orm\\Entity\\Page p'
      . ' WHERE p.websiteid = :websiteId AND p.templateid = :templateId';

    $query = $this->_em->createQuery($dql);
    $query->setParameters(array(
      'websiteId' => $websiteId,
      'templateId' => $tempalteId,
    ));
    $result = $query->getResult();
    $ids = array_map(function ($value) {
      return $value['id'];
    }, $result);
    return $ids;
  }
}
