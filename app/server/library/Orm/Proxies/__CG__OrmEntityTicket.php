<?php

namespace Orm\Proxies\__CG__\Orm\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Ticket extends \Orm\Entity\Ticket implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'id', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'timestamp', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'websiteid', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'isredirect', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'isget', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'requestconfig', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'ticketlifetime', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'remainingcalls', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'sessionlifetime', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'credentials');
        }

        return array('__isInitialized__', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'id', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'timestamp', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'websiteid', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'isredirect', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'isget', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'requestconfig', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'ticketlifetime', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'remainingcalls', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'sessionlifetime', '' . "\0" . 'Orm\\Entity\\Ticket' . "\0" . 'credentials');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Ticket $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimestamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimestamp', array());

        return parent::getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimestamp($timestamp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimestamp', array($timestamp));

        return parent::setTimestamp($timestamp);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsiteid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsiteid', array());

        return parent::getWebsiteid();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsiteid($websiteid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsiteid', array($websiteid));

        return parent::setWebsiteid($websiteid);
    }

    /**
     * {@inheritDoc}
     */
    public function isRedirect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRedirect', array());

        return parent::isRedirect();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsredirect($isredirect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsredirect', array($isredirect));

        return parent::setIsredirect($isredirect);
    }

    /**
     * {@inheritDoc}
     */
    public function isGet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isGet', array());

        return parent::isGet();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsget($isget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsget', array($isget));

        return parent::setIsget($isget);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequestconfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequestconfig', array());

        return parent::getRequestconfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequestconfig($requestconfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequestconfig', array($requestconfig));

        return parent::setRequestconfig($requestconfig);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketlifetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketlifetime', array());

        return parent::getTicketlifetime();
    }

    /**
     * {@inheritDoc}
     */
    public function setTicketlifetime($ticketlifetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTicketlifetime', array($ticketlifetime));

        return parent::setTicketlifetime($ticketlifetime);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemainingcalls()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemainingcalls', array());

        return parent::getRemainingcalls();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemainingcalls($remainingcalls)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemainingcalls', array($remainingcalls));

        return parent::setRemainingcalls($remainingcalls);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionlifetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionlifetime', array());

        return parent::getSessionlifetime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSessionlifetime($sessionlifetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSessionlifetime', array($sessionlifetime));

        return parent::setSessionlifetime($sessionlifetime);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredentials', array());

        return parent::getCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentials($credentials)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentials', array($credentials));

        return parent::setCredentials($credentials);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function toCmsData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toCmsData', array());

        return parent::toCmsData();
    }

}
